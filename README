use RecursiveSSH;

my $rssh = RecursiveSSH->new({
  children => $sub  # called with the RecursiveSSH::Remote object
});

$rssh->connect;

$rssh->exec(
  $sub_to_run_remotely,
  $on_read_cb,
  $on_done_cb,
);

$rssh->exec(...); # this follows the first

$rssh->loop; # consume all output from the last two execs

$rssh->exec(...);

$rssh->loop; # consume all output from the last exec

$rssh->quit;

-----------------------------------------------------------

LICENSE:

Copyright (c) 2011 Jason Carey. All rights reserved.
This program is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
